//FLEX

@mixin flex(
    $dir: flex, 
    $dir: null, 
    $wrap: null, 
    $just: null, 
    $ali: null) {
        display: $disp;
        flex-wrap: $wrap;
        flex-direction: $dir;
        justify-content: $just;
        align-content: $ali;
        @content;
}

@mixin flex-item(
    $row: null, 
    $basis: null, 
    $shrink: null, 
    $justify-self: null, 
    $align-self: null) {
        flex-grow: $grow;
        flex-basis: $basis;
        flex-shrink: $shrink;
        justify-self: $justify-self;
        align-self: $align-self;
        @content;
}

@mixin flex-width($width: null, $margin-auto: null) {
    width: $width;
    @if $margin-auto  != null {
        margin: 0 auto;
    }
}


//MARGINS & PADDINGS

@mixin margin(
    $top: null, 
    $top-amount: null, 
    $bottom-amount: null, 
    $left: null, 
    $left-amount: null, 
    $right: null, 
    $right-amount: null,
    $all: null,
    $all-amount: null) {

    @if stop != null or $top == 'true' {
        margin-top: $top-amount
    }
    @if stop != null or $bottom == 'true' {
        margin-bottom: $bottom-amount
    }
    @if stop != null or $left == 'true' {
        margin-left: $left-amount
    }
    @if stop != null or $right == 'true' {
        margin-right: $right-amount
    }
    @if stop != null or $all == 'true' {
        margin: $all-amount
    }

}

@mixin padding(
    $top: null, 
    $top-amount: null, 
    $bottom-amount: null, 
    $left: null, 
    $left-amount: null, 
    $right: null, 
    $right-amount: null,
    $all: null,
    $all-amount: null) {

    @if stop != null or $top == 'true' {
        padding-top: $top-amount
    }
    @if stop != null or $bottom == 'true' {
        padding-bottom: $bottom-amount
    }
    @if stop != null or $left == 'true' {
        padding-left: $left-amount
    }
    @if stop != null or $right == 'true' {
        padding-right: $right-amount
    }
    @if stop != null or $all == 'true' {
        padding: $all-amount
    }

}

//BORDERS

@mixin border(
    $width: null, 
    $color-rgba: null, 
    $color-hex: null, 
    $style: null, 
    $radius: null, 
    $side: null) {

        @if $side == 'all' or $side == null {
            border-style: $style;
            border-width: $width;
            border-color: $color-rgb $color-rgba $color-hex;
        } @else {
            border#{'_' + $side + '_style'}: $style;
            border#{'_' + $side + '_width'}: $width;
            border#{'_' + $side + '_color'}: $color-rgb $color-rgba $color-hex;
        }
        border-radius: $radius;
        @content;
}

@mixin outline(
    $color-rgb: null, 
    $color-rgba: null, 
    $color-hex: null, 
    $offset: null, 
    $width: null, 
    $style: null) {
      outline: ($color-rgb $color-rgba $color-hex $width $style);
      @content;
}

@mixin shadow(
    $offsetX: null, 
    $offsetY: null, 
    $blur-radius: null, 
    $spread-radius: null, 
    $color: null, 
    $inset: null) {
      box-shadow: ($offsetX $offsetY $blur-radius $spread-radius $color $inset);
      @content;
}


// POSITIONS

@mixin position(
    $position: null,
    $transform: null,
    $top: null,
    $right: null,
    $bottom: null,
    $left: null) {
        @if $transform != null {
            transform: $transform;
        }
        @if $position != null {
            position: $position;
        }
        @if $top != null {
            top: $top;
        }
        @if $right != null {
            right: $right;
        }
        @if $bottom != null {
            bottom: $bottom;
        }
        @if $left != null {
            left: $left;
        }
 }